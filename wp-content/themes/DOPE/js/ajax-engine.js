// Generated by CoffeeScript 1.3.3
(function() {
  var __slice = [].slice;

  jQuery(document).ready(function($) {
    var container, containerView, elementAnimationAfter, elementAnimationBefore, globalAnimationAfterLoading, globalAnimationBeforeLoading, init_AJAX, isArticle, isIntern, isPagedLink, loadPage, newCommentTemplate, postComment, quickSearchArea, quickSearchElements, renderPage, root, searchTemplate, selected_result, showNextPage, spotlight, spotlightView, switchB, switchButton, themeRoot, xhrQuickSearch;
    root = 'http://localhost:8888/test/wordpress';
    themeRoot = root + "/wp-content/themes/DOPE";
    selected_result = -1;
    quickSearchArea = $('#quicksearch-area');
    quickSearchElements = quickSearchArea.find('.quicksearch-element');
    xhrQuickSearch = 0;
    searchTemplate = $('#quicksearch-template').html();
    newCommentTemplate = $('#new-comment-template').html();
    isArticle = function(url) {
      return !/wordpress\/(?:category|page|$){1}/.test(url);
    };
    isIntern = function(url) {
      return (/^(?:http:\/\/)?localhost:8888\/test\/wordpress\//.test(url) || (/^(http:\/\/)?dope\.net78\.net\/wordpress\//.test(url))) && !/(?:wp\-admin|wp\-login|\.(png|jpeg|mp3|mpeg|pdf)$)/.test(url);
    };
    isPagedLink = function(url) {
      return /wordpress\/page{1}/.test(url);
    };
    globalAnimationBeforeLoading = function() {
      $('#loading').fadeIn(800);
    };
    globalAnimationAfterLoading = function() {
      FB.XFBML.parse(document.getElementById('entry-social-infos-single'), function() {
        return $('#loading').fadeOut(800);
      });
    };
    elementAnimationBefore = function(jSelector) {
      jSelector.animate({
        opacity: '0'
      }, {
        duration: 600
      });
    };
    elementAnimationAfter = function(jSelector) {
      jSelector.animate({
        opacity: '1'
      }, {
        duration: 600
      });
    };
    container = function(containerSelector, animationTime) {
      var that;
      that = {};
      that.up = function() {
        return containerSelector.animate({
          bottom: 640
        }, {
          duration: animationTime
        });
      };
      that.down = function() {
        return containerSelector.animate({
          bottom: 100
        }, {
          duration: animationTime
        });
      };
      that.stop = function() {
        return containerSelector.stop();
      };
      return that;
    };
    switchButton = function(switchSelector, animationTime) {
      var icon, that;
      that = {};
      icon = switchSelector.find('#spotlight-arrow');
      that.up = function() {
        return icon.css('background', "url('" + themeRoot + "/icons/arrow-down.png') no-repeat");
      };
      that.down = function() {
        return icon.css('background', "url('" + themeRoot + "/icons/arrow-up.png') no-repeat");
      };
      that.stop = function() {
        switchSelector.stop();
        return icon.stop();
      };
      return that;
    };
    spotlight = function(spotlightSelector, container, switchButton, animationTime) {
      var state, that;
      state = true;
      that = {};
      that.toggleState = function(newState) {
        if (newState == null) {
          newState = !state;
        }
        spotlightSelector.stop();
        container.stop();
        switchButton.stop();
        state = newState;
        if (state) {
          spotlightSelector.animate({
            bottom: 30,
            opacity: '1'
          }, {
            duration: animationTime
          }).animate({
            bottom: 50
          }, {
            duration: animationTime
          });
          container.down();
          return switchButton.down();
        } else {
          return spotlightSelector.animate({
            bottom: 30
          }, {
            duration: animationTime,
            complete: function() {
              container.up();
              return switchButton.up();
            }
          }).animate({
            bottom: 640,
            opacity: '0'
          }, {
            duration: animationTime
          });
        }
      };
      return that;
    };
    renderPage = function() {
      var content, selector, selectors, tempDiv, _fn, _i, _len;
      content = arguments[0], selectors = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      try {
        tempDiv = $("<div>").html(content);
      } catch (e) {
        location.href = document.URL;
        console.log("get the targeted URL failed");
        return;
      }
      document.title = tempDiv.find('title').html();
      _fn = function(selector) {
        var jSelector;
        jSelector = $(selector);
        jSelector.queue(elementAnimationBefore(jSelector)).queue(function() {
          jSelector.html(tempDiv.find(selector).html());
          jSelector.dequeue();
        }).queue(elementAnimationAfter(jSelector));
      };
      for (_i = 0, _len = selectors.length; _i < _len; _i++) {
        selector = selectors[_i];
        _fn(selector);
      }
      $(selector).queue(function() {
        globalAnimationAfterLoading();
        $(this).dequeue();
      });
      tempDiv.remove();
    };
    loadPage = function() {
      var isLink, selectors, url;
      url = arguments[0], isLink = arguments[1], selectors = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      globalAnimationBeforeLoading();
      if (isLink) {
        history.pushState({
          pushStateActive: true
        }, '', url);
      }
      $.get(url, {
        ajaxOn: true
      }, function(data) {
        renderPage.apply(null, [data].concat(__slice.call(selectors)));
      }, 'html');
    };
    showNextPage = function(url) {
      return $.get(url, {
        ajaxOn: true
      }, function(data) {
        var tempDiv;
        try {
          tempDiv = $("<div>").html(data);
        } catch (e) {
          location.href = document.URL;
          console.log("get the targeted URL failed");
          return;
        }
        tempDiv.find("h2").remove();
        $("#content").find("#nav-below").remove();
        return $("#content").append(tempDiv.html());
      });
    };
    init_AJAX = function(url) {
      history.replaceState({
        pushStateActive: true
      }, 'first page', document.URL);
      window.onpopstate = function(event) {
        var _ref;
        if ((((_ref = event.state) != null ? _ref.pushStateActive : void 0) != null) === true) {
          loadPage(document.URL, false, '#content', '#articles-widgets', '#ajax-scripts');
        }
      };
    };
    postComment = function(formSelector) {
      var dataToSend;
      dataToSend = $(formSelector).serialize() + '&ajaxOn=true';
      return $.post(root + '/wp-comments-post.php', dataToSend, function(data) {
        $('#comments-list').append(Mustache.to_html(newCommentTemplate, data));
        elementAnimationAfter($('.new-comment'));
      }, 'json');
    };
    init_AJAX();
    containerView = container($("#container"), 800);
    switchB = switchButton($('#spotlight-switch'), 800);
    spotlightView = spotlight($("#spotlight"), containerView, switchB, 800);
    $('#spotlight-switch').on('click', function(event) {
      return spotlightView.toggleState();
    });
    $('body').on('click', 'a', function(event) {
      if (isIntern(this.href)) {
        event.preventDefault();
        if (isArticle(this.href)) {
          loadPage(this.href, true, '#content', '#articles-widgets', '#ajax-scripts');
        } else if (isPagedLink(this.href)) {
          showNextPage(this.href);
        } else {
          loadPage(this.href, true, '#content', '#articles-widgets');
        }
      }
    });
    $('body').on('submit', 'form', function(event) {
      event.preventDefault();
      if (this.id === 'commentform') {
        postComment('#commentform');
      }
    });
    quickSearchArea.on('mouseover', 'li', function(e) {
      quickSearchElements.removeClass('focus');
      this.className += ' focus';
      selected_result = $(this).index();
    });
    quickSearchArea.on('mouseleave', function(e) {
      selected_result = -1;
      quickSearchElements.removeClass('focus');
    });
    return $('#search-box').on('keyup', function(e) {
      if (e.keyCode === 38) {
        if (selected_result > -1) {
          selected_result--;
          quickSearchElements.removeClass('focus');
          if (selected_result !== -1) {
            return quickSearchElements[selected_result].className += ' focus';
          }
        }
      } else if (e.keyCode === 40) {
        if (selected_result < quickSearchElements.length - 1) {
          selected_result++;
          quickSearchElements.removeClass('focus');
          return quickSearchElements[selected_result].className += ' focus';
        }
      } else if (e.keyCode === 13) {
        e.preventDefault();
        if (selected_result === -1) {
          loadPage($('#searchform').attr('action') + '?s=' + this.value, true, '#content', '#articles-widgets', '#ajax-scripts');
        } else {
          loadPage(quickSearchElements.eq(selected_result).find('a').attr('href'), true, '#content', '#articles-widgets', '#ajax-scripts');
          selected_result = -1;
        }
        return $(this).trigger("blur");
      } else {
        selected_result = -1;
        if (!(this.value === '')) {
          if (typeof xhrQuickSearch.abort === "function") {
            xhrQuickSearch.abort();
          }
          return xhrQuickSearch = $.post(root + '/wp-admin/admin-ajax.php', {
            action: 'quicksearch',
            search: this.value
          }, function(data) {
            var content, row;
            if (data) {
              content = ((function() {
                var _i, _len, _results;
                _results = [];
                for (_i = 0, _len = data.length; _i < _len; _i++) {
                  row = data[_i];
                  _results.push(Mustache.to_html(searchTemplate, row));
                }
                return _results;
              })()).join('');
              quickSearchArea.css('display', 'block');
            } else {
              content = '';
              quickSearchArea.css('display', 'none');
            }
            quickSearchArea.html(content);
            return quickSearchElements = quickSearchArea.find('.quicksearch-element');
          }, 'json');
        } else {
          quickSearchArea.html('');
          return quickSearchArea.css('display', 'none');
        }
      }
    }).on('blur', function(e) {
      this.value = '...';
      quickSearchArea.html('');
      quickSearchArea.css('display', 'none');
      if (!(selected_result === -1)) {
        loadPage(quickSearchElements.eq(selected_result).find('a').attr('href'), true, '#content', '#articles-widgets', '#ajax-scripts');
        return selected_result = -1;
      }
    });
  });

}).call(this);
